{
  "hash": "4d4781db8917f39d439e26f81bb7508b",
  "result": {
    "markdown": "---\ntitle: \"Научно-издательская система Quarto для биостатистики\"\n#subtitle: 'Фреймворк Quarto для биологов и биоинформатиков'\nauthor: \"Елена Убогоева\"\n#date: \"Created on 01 April, 2023\"\nexecute:\n  echo: true\n  output: true\nformat: \n  revealjs:\n    slide-number: c/t\n    highlight-style: github\n    #show-slide-number: all\n    # mainfont: Arial\n    # fontsize: 14px\n    theme: [default, custom.scss]\n    chalkboard: \n      buttons: true\n    # theme: [serif]\n    # mouse-wheel: true\n    auto-play-media: true\n    width: 1280\n    height: 720\n    fig-dpi: 300\n    # logo: figures/icg.png\n    #logo: \"../images/logo_channel.png\"\ncode-link: true\ncss: styles.css\nfilters: [bg_style.lua]\nrevealjs-plugins:\n  - pointer\neditor: visual\ndraft: true\n---\n\n\n## План лекции\n\n1.  Обзор Quarto: название, история создания, отличия от RMarkdown, структура Quarto-документа\n\n2.  Quarto in Action\n\n3.  Применение в биостатистике\n\n# Обзор Quarto\n\n## Название \"Quarto\" {#название-quarto}\n\n::: columns\n::: {.column width=\"40%\"}\n![](https://upload.wikimedia.org/wikipedia/commons/0/0a/MND_title_page.jpg){fig-alt=\"Пример Кварто. Сон в летнюю ночь У. Шекспира.\" width=\"294\"}\n:::\n\n::: {.column width=\"60%\"}\nQuarto (от латинского quārtō)^1^ --- это формат книги или брошюры, состоящей из листов, напечатанных с восемью страницами текста, по четыре на одну сторону, а затем сложенных дважды, чтобы получить четыре листа.\n\nСлева показан пример кварто-книги.\n:::\n:::\n\n1\\. Самой ранней известной европейской печатной книгой является кварто [Sibyllenbuch](https://en.wikipedia.org/wiki/Sibyllenbuch_fragment), которая, как полагают, была напечатана [Иоганном Гутенбергом](https://en.wikipedia.org/wiki/Johannes_Gutenberg) в 1452-53 годах.\n\n## Quarto -- научно-издательская система {style=\"font-size: 90%\"}\n\n28 июля 2022 года компания Posit [анонсировала](https://posit.co/blog/announcing-quarto-a-new-scientific-and-technical-publishing-system/) Quarto как новую систему для научно-технических публикаций с открытым исходным кодом.\n\nСистема Quarto построена на [`pandoc`](https://pandoc.org/) и использует [Markdown](https://www.markdownguide.org/) для разметки.\n\n::: incremental\n-   [Pandoc](https://pandoc.org/) --- универсальный конвертер для работы с текстовыми документами для форматирования научных и технических текстов, поддерживающий более 40 различных форматов.\n\n-   [Quarto **CLI**](https://github.com/quarto-dev/quarto-cli) --- это интерфейс командной строки, который преобразует различные форматы (`.md`, `.rmd`, `.qmd` или `.ipynb` / Jupyter notebook) в статические отчеты PDF / Word / HTML, интерактивные книги, веб-сайты, блоги, презентации и многое другое.\n\n-   Quarto позволяет работать не только с R, но и с Python, Julia и [Observable JS](https://github.com/observablehq/).\n\n-   Авторы: Carlos Scheidegger ([\\@cscheid](https://github.com/cscheid)), Charles Teague ([\\@dragonstyle](https://github.com/dragonstyle)), Christophe Dervieux ([\\@cderv](https://github.com/cderv)), **J.J. Allaire** ([\\@jjallaire](https://github.com/jjallaire/)), Yihui Xie ([\\@yihui](https://github.com/yihui)).\n:::\n\n## Принцип конвертации документов в Rmd {style=\"font-size: 85%\"}\n\n::: columns\n::: {.column width=\"60%\"}\n::: fragment\nРабота с Rmd обычно выглядит так:\n\n![](https://www.njtierney.com/post/2022/04/11/rmd-to-qmd/imgs/r-knitr-rmd.jpeg)\n\n.Rmd документ -\\> `knitr` -\\> различные аутпуты. Большая часть опирается на `Pandoc`, кроме `xaringan` и `blogdown`.\n:::\n:::\n\n::: {.column width=\"40%\"}\n::: fragment\nРабота с Quarto:\n\n![](https://quarto.org/docs/get-started/hello/images/rstudio-qmd-how-it-works.png)\n\nQuarto доступно \"из коробки\" для пользователей других языков программирования без необходимости устанавливать R.\n:::\n:::\n:::\n\n. . .\n\nРабота с Rmd-является R-центричной, поскольку нужен R-пакет `rmarkdown` для рендеринга документов.\n\n## Принцип конвертации документов в Quarto\n\nВ дополнение к [`knitr`](https://yihui.org/knitr/) Quarto поддерживает еще [Jupyter](https://jupyter.org/), [Observable JS](https://github.com/observablehq/), что позволяет запускать код на языках Python, Julia, JavaScript.\n\n![](https://www.njtierney.com/post/2022/04/11/rmd-to-qmd/imgs/quarto-all.jpeg)\n\nОбратная совместимость с .Rmd позволяет конвертировать существующие .Rmd-документы в quarto-документы с минимальными изменениями.\n\nМожно экспортировать в 40 различных форматов, поддерживаемых Pandoc, например pdf, html, revealjs и многое другое.\n\n## Отличия Quarto от RMarkdown\n\n::: incremental\n-   Quarto является инструментом командной строки, а не R-пакетом как `rmarkdown`, следовательно, Quarto не привязан к языку и позволяет создавать и рендерить документы:\n\n    -   без использования R;\n    -   не только из RStudio, но и из Visual Studio;\n    -   из командной строки, что позволяет например python-юзерам не использовать R для создания интерактивных документов.\n\n-   Quarto заменяет зоопарк R-пакетов для создания сайтов, блогов, книг, презентаций, научных статей.\n\n-   Существует сразу несколько engine для запуска кода: `knitr`, `jupyter, Observable`.\n\n-   Однако, некоторые пакеты могут обладать функциями и преимуществами, которых нет в Quarto.\n:::\n\n## Quarto заменяет зоопарк пакетов\n\nИли one package to rule them all\n\nQuarto можно использовать вместо:\n\n-   [xaringan](https://github.com/yihui/xaringan) (для презентаций);\n\n-   [bookdown](https://github.com/rstudio/bookdown) (для книг);\n\n-   [blogdown](https://github.com/rstudio/blogdown) и [distill](https://github.com/rstudio/distill) (для блогов и веб-сайтов);\n\n-   [papaja](https://github.com/crsh/papaja) для научных статей.\n\nПримеры использования разберем во второй части лекции.\n\n::: callout-note\nПреимущество в единообразной структуре quarto-документов\n:::\n\n## Структура Quarto-документа\n\n-   ::: {style=\"color: midnightblue\"}\n    **Метаданные документа в формате yaml (YAML Ain't Markup Language)**\n    :::\n\n-   ::: {style=\"color: grey\"}\n    Текст документа в Markdown-формате\n    :::\n\n-   ::: {style=\"color: grey\"}\n    Ячейки с исполняемым кодом\n    :::\n\n## Метаданные документа\n\nРазмещены в начале конкретного документа, а для сложных проектов в файле `_quarto.yml`.\n\nСодержат всю необходимую информацию о документе: вид аутпута, название, автор, выполнять ли код и другое -\\> подробнее на конкретных примерах [во второй части лекции](#quarto-in-action).\n\nПочитать про yaml-файлы для проектов можно [здесь](https://quarto.org/docs/projects/quarto-projects.html).\n\n## Структура Quarto-документа\n\n-   ::: {style=\"color: grey\"}\n    Метаданные документа в формате yaml (**YAML** Ain't Markup Language)\n    :::\n\n-   ::: {style=\"color: midnightblue\"}\n    **Текст документа в Markdown-формате**\n    :::\n\n-   ::: {style=\"color: grey\"}\n    Ячейки с исполняемым кодом\n    :::\n\n## Текст документа в Markdown-формате\n\nМожно использовать как стандартную Markdown-разметку, так и применять хоткеи и другие возможности визуального редактора Quarto.\n\n| Markdown                            | Вывод                           |\n|-------------------------------------|---------------------------------|\n| \\*курсив\\* и \\*\\*полужирный\\*\\*     | *курсив* и **полужирный**       |\n| надстрочный\\^2\\^ / подстрочный\\~2\\~ | надстрочный^2^ / подстрочный~2~ |\n| \\~\\~зачеркнутый\\~\\~                 | ~~зачеркнутый~~                 |\n| \\`vebratim code\\`                   | `vebratim code`                 |\n\n::: callout-tip\n## Подсказка\n\nС помощью визуального редактора большую часть форматирования можно делать с помощью горячих клавиш:\n\n-   **Bold** -- Ctrl+B\n-   *Italic* -- Ctrl+I\n-   `code` -- Ctrl +D\n:::\n\n## Создание заголовков\n\n+-------------------+------------------+\n| Markdown          | Вывод            |\n+===================+==================+\n| \\# Заголовок 1    | # Заголовок 1    |\n+-------------------+------------------+\n| \\## Заголовок 2   | ## Заголовок 2   |\n+-------------------+------------------+\n| \\### Заголовок 3  | ### Заголовок 3  |\n+-------------------+------------------+\n| \\#### Заголовок 4 | #### Заголовок 4 |\n+-------------------+------------------+\n\n::: {.callout-note appearance=\"simple\"}\nТакже можно создавать заголовки с помощью горячих клавиш:\\\nCtrl+Alt+\\<уровень заголовка\\>\n:::\n\n::: {.callout-tip appearance=\"simple\"}\nCtrl+Alt+2 создаст заголовок второго уровня\n:::\n\nПо умолчанию заголовки выровнены по левому краю, для выравнивания по центру нужно добавить в yaml-шапку документа опцию `css: styles.css`\n\n## Картинки и гиперссылки\n\n\\[Институт биоинформатики\\](https://bioinf.me/)\n\n[Институт биоинформатики](https://bioinf.me/)\n\n\\![\\](https://quarto.org/quarto.png)\n\n![](https://quarto.org/quarto.png){width=\"235\"}\n\n::: {.callout-tip appearance=\"simple\"}\n## Подсказка\n\nТакже картинки (Ctrl+Shift+I) и ссылки (Ctrl+K) можно вставлять с помощью кнопок в rstudio и горячими клавишами.\n:::\n\n::: {.callout-note appearance=\"simple\"}\nМожно настроить свои сочетания хоткеев в RStudio: Tools -\\> Modify Keyboard Shortcuts\n:::\n\n## Формулы на основе LaTeX-синтаксиса\n\n[Математические формулы](https://quarto.org/docs/authoring/markdown-basics.html#equations) в Quarto используют разделители `$` для встроенных математических элементов текста и разделители `$$` для выносной математики на основе [LaTeX](https://www.latex-project.org/)-синтаксиса.\n\n+------------------------------+---------------------------+\n| Markdown                     | Вывод                     |\n+==============================+===========================+\n| inline math: \\$E = mc\\^{2}\\$ | inline math: $E = mc^{2}$ |\n+------------------------------+---------------------------+\n| display math:                | display math:             |\n|                              |                           |\n| \\$\\$E = mc\\^{2}\\$\\$          | $$E = mc^{2}$$            |\n+------------------------------+---------------------------+\n\n## Формулы на основе LaTeX-синтаксиса\n\nНапример формула дисперсии:\n\n\\$\\$\n\nvar = \\\\frac{\\\\sum\\_{i=1}\\^n{(x_i - \\\\overline{x})\\^2}}{n-1}\n\n\\$\\$\n\n$$ var = \\frac{\\sum_{i=1}^n{(x_i - \\overline{x})^2}}{n-1} $$\n\nВсе формулы в рамках этого курса были сверстаны с использованием LaTeX, очень удобная штука, рекомендую.\n\n## Структура Quarto-документа\n\n-   ::: {style=\"color: grey\"}\n    Метаданные документа в формате yaml (**YAML** Ain't Markup Language)\n    :::\n\n-   ::: {style=\"color: grey\"}\n    Текст документа в Markdown-формате\n    :::\n\n-   ::: {style=\"color: midnightblue\"}\n    **Ячейки с исполняемым кодом**\n    :::\n\n## Ячейки с исполняемым кодом\n\nЧтобы показать, как выглядела ячейка с кодом вместе с настройками чанка, достаточно написать `#| echo: fenced`\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nhead(iris)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n```\n:::\n:::\n\n:::\n:::\n\nНезаменимая вещь при обучении\n\n## Параметры чанков с кодом\n\nКак и в рмд\n\nПишутся с таким знаком: #\\|\n\n\n::: {.cell}\n\n:::\n\n\nМожно настроить глобальные настройки в yaml-документе, но если нужно изменить настройки конкретного чанка, то изменить их таким образом\n\n# Quarto in Action {#quarto-in-action}\n\n## Применение на конкретных кейсах\n\n-   Презентации в формате `revealjs`\n\n-   Блог\n\n-   Вебсайт хорош для создания резюме\n\n-   `bookdown` переносится с минимальными изменениями\n\n## Презентации в формате `revealjs`\n\nДля создания в RStudio: File -\\> New File -\\> Quarto Presentation\n\nБазовые настройки `revealjs` презентации:\n\n``` yaml\n---\ntitle: \"Название презентации\"\nformat: revealjs\neditor: visual\n---\n```\n\nПо умолчанию в формате `revealjs` показ кода выключен `echo: false`\n\nДля того чтобы включить показ кода и аутпута нужно указать:\n\n``` yaml\n---\nexecute:\n  echo: true\n  output: true\n---\n```\n\n## Принципы верстки с помощью css\n\nДля настройки шрифтов, цвета ссылок, формата ячеек с кодом, нужно использовать [scss](https://sass-lang.com/) стили\n\n``` yaml\n---\nformat: \n  revealjs:\n    theme: [default, custom.scss]\n---\n```\n\nПример scss файла\n\n``` scss\n// headings\n$presentation-heading-font: \"Cabin\", \"Commissioner\", sans serif !default;\n$presentation-h2-font-size: 1.5em;\n$presentation-font-size-root: 34px !default;\n```\n\nПодробнее можно посмотреть: здесь\n\nТакже в Quarto есть ряд встроенных тем на Bootstrap 5, подробнее [здесь](https://quarto.org/docs/output-formats/html-themes.html)\n\n## Тонкие настройки презентации {style=\"font-size: 90%\"}\n\n::: {style=\"color: purple\"}\nМожно менять цвет строк с помощью настроек Div: style=\"color: purple\"\n:::\n\nВыглядит это так:\n\n``` css\n::: {style=\"color: purple\"}\n\nМожно менять цвет строк с помощью настроек Div: style=\"color: purple\"\n\n:::\n```\n\nМожно менять цвет [слов]{style=\"color: red\"} с помощью выделения квадратными скобками и указания цвета: \\[слов\\]{style=\"color: red\"}\n\nКроме этого, в презентации можно использовать лазерную указку (pointer) и доску (chalkboard):\n\n``` yaml\n---\nchalkboard: true\nrevealjs-plugins:\n  - pointer\n---\n```\n\nДоска доступна сразу по умолчанию, а указку нужно [установить](https://github.com/quarto-ext/pointer).\n\n## Выделение кода\n\nИспользование вместе с колоночным layout позволяет показывать код и его результат на одном слайде.\n\ncss-styles можно использовать для изменения размера шрифтов и прочего\n\nБлоки callout\n\n## Создание своего блога в Quarto\n\nFile -\\> New Project -\\> New Directory -\\> Quarto Blog\n\n![](images/quarto_blog.png)\n\n## Создание своего блога в Quarto\n\nПосты должны быть в папке posts/\n\nПри желании можно пост не публиковать и тогда в yaml-файле указать draft: true\n\n## Преимущества и недостатки Quarto\n\n# Применение в биостатистике\n\n## Применение в html-отчетах\n\nСтандартно, как и с Rmd\n\n## Применение в публикациях\n\nhttps://quarto.org/docs/journals/formats.html\n\nhttps://quarto.org/docs/journals/formats.html#example-acm-format\n\n## Ссылки на другие материалы\n\n[Сайт](https://quarto-meetup-begin.netlify.app/) на Quarto, посвященный работе с Quarto с материалами на Quarto от Евгения Матерова.\n\nhttps://yihui.org/en/2022/04/quarto-r-markdown/\n\nУ меня сайт курса и презентации тоже сделаны в Quarto.\n\nhttps://mine-cetinkaya-rundel.github.io/2022-repro-toronto/#/title-slide\n\n![](https://quarto.org/docs/get-started/hello/images/rstudio-qmd-how-it-works.png)\n\nПроиллюстрировать создание документа и презентации -\\> в новом проекте RStudio\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}