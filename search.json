[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Об авторе блога",
    "section": "",
    "text": "&lt;div&gt;&lt;img src=\"https://mc.yandex.ru/watch/97025960\" style=\"position:absolute; left:-9999px;\" alt=\"\"&gt;&lt;/div&gt;\nМеня зовут Елена Убогоева. Я биоинформатик, R-энтузиаст, а в настоящий момент работаю дата-аналитиком в X5Tech, в управлении централизированного мониторинга. Веду телеграм-канал, посвященный R и статистике, преподаю на курсах Blastim: “Статистика, R и анализ данных” и “Анализ данных RNA-seq”."
  },
  {
    "objectID": "about.html#образование",
    "href": "about.html#образование",
    "title": "Об авторе блога",
    "section": "Образование",
    "text": "Образование\n\nИнститут цитологии и генетики СО РАН | Новосибирск\nАспирантура по направлению биоинформатики и системной биологии | 2020 - 2022\nНовосибирский государственный университет | Новосибирск\nМагистратура по направлению цитологии и генетики | 2018 - 2020\nНовосибирский государственный университет | Новосибирск\nБакалавриат по направлению цитологии и генетики | 2014 - 2018"
  },
  {
    "objectID": "about.html#преподавание",
    "href": "about.html#преподавание",
    "title": "Об авторе блога",
    "section": "Преподавание",
    "text": "Преподавание\n\nСтатистика, R и анализ данных от Blastim, учебный ассистент и лектор дополнительных занятий, с 2022 по настоящее время.\nАнализ данных RNA-seq от Blastim, лектор, октябрь - ноябрь 2023 года.\nСтатистика для селекционеров, лектор и ведущий курса, февраль - апрель 2024 года.\nЗаписываю лекции на ютубе, плейлист по ссылке.\nПрочитала лекцию по Quarto для студентов Института Биоинформатики.\nВеду индивидуальные занятия по R, статистике и биоинформатике, отчет по итогам 2022-2023 года можно посмотреть здесь.\nПредыдущие проекты можно посмотреть здесь.\n\nПо индивидуальному репетиторству актуальные условия следующие:\n\nТеоретические лекции по:\n\nR, начиная с самых основ, и заканчивая подробным разбором tidyverse, с фокусом на работу с dplyr и ggplot2.\nСтатистике (от основ до обобщенной линейной модели).\nБиоинформатические кейсы, в особенности связанные с анализом и интерпретацией данных NGS.\n\nСтоимость 2500р в час (астрономический).\nФормат: онлайн в зуме"
  },
  {
    "objectID": "about.html#список-публикаций",
    "href": "about.html#список-публикаций",
    "title": "Об авторе блога",
    "section": "Список публикаций:",
    "text": "Список публикаций:\n\nSamalova, M., Melnikava, A., Elsayad, K., Peaucelle, A., Gahurova, E., Gumulec, J., Spyroglou, I., Zemlyanskaya, E. V., Ubogoeva, E. V., Balkova, D., Demko, M., Blavet, N., Alexiou, P., Benes, V., Mouille, G., & Hejatko, J. (2023). Hormone-regulated expansins: Expression, localization, and cell wall biomechanics in Arabidopsis root growth. Plant physiology, 194(1), 209–228. https://doi.org/10.1093/plphys/kiad228\nLavrekha, V. V., Levitsky, V. G., Tsukanov, A. V., Bogomolov, A. G., Grigorovich, D. A., Omelyanchuk, N., Ubogoeva, E. V., Zemlyanskaya, E. V., Mironova, V. (2022). CisCross: A gene list enrichment analysis to predict upstream regulators in Arabidopsis thaliana. Frontiers in plant science, 13, 942710. https://doi.org/10.3389/fpls.2022.942710\nUbogoeva, E. V., Zemlyanskaya, E. V., Xu, J., Mironova, V. (2021). Mechanisms of stress response in the root stem cell niche. Journal of experimental botany, 72(19), 6746–6754. https://doi.org/10.1093/jxb/erab274\nZemlyanskaya, E. V., Omelyanchuk, N. A., Ubogoeva, E. V., Mironova, V. V. (2018). Deciphering Auxin-Ethylene Crosstalk at a Systems Level. International journal of molecular sciences, 19(12), 4060. https://doi.org/10.3390/ijms19124060"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Статистика и R в науке и аналитике",
    "section": "",
    "text": "Здесь будут размещаться статьи по статистике и R с телеграм-канала “Статистика и R в науке и аналитике”.\nСайт написан на R с использованием Quarto.\n\n\n\n\n\n\n\n\n  \n\n\n\n\nКак добавить яндекс-метрику на сайт Quarto\n\n\n\n\n\n\n\nanalytics\n\n\n\n\n\n\n\n\n\n\n\nApr 16, 2024\n\n\nElena U\n\n\n\n\n\n\n  \n\n\n\n\nПоправки на множественное тестирование\n\n\n\n\n\n\n\nstatistics\n\n\n\n\n\n\n\n\n\n\n\nNov 29, 2023\n\n\nElena U\n\n\n\n\n\n\n  \n\n\n\n\nКак задать хороший вопрос в R чате?\n\n\n\n\n\n\n\nR\n\n\n\n\n\n\n\n\n\n\n\nDec 2, 2022\n\n\nElena U\n\n\n\n\n\n\n  \n\n\n\n\nВиды пределов погрешностей\n\n\n\n\n\n\n\nstatistics\n\n\n\n\n\n\n\n\n\n\n\nNov 15, 2022\n\n\nElena U\n\n\n\n\n\n\n  \n\n\n\n\nAnscombe’s quartet\n\n\n\n\n\n\n\nstatistics\n\n\n\n\n\n\n\n\n\n\n\nOct 19, 2022\n\n\nElena U\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/ansombe_quartet.html#квартет-энскомба-anscombes-quartet",
    "href": "posts/ansombe_quartet.html#квартет-энскомба-anscombes-quartet",
    "title": "Anscombe’s quartet",
    "section": "Квартет Энскомба (Anscombe’s quartet)",
    "text": "Квартет Энскомба (Anscombe’s quartet)\nКвартет Энскомба представляет собой 4 набора данных с одинаковыми описательными статистиками (среднее, дисперсия, коэффициент корреляции), но с очень разными распределениями данных. Каждый набор содержит 11 значений (x, y). Francis Anscombe предложил эти наборы данных в 1973 году [1] в качестве иллюстрации важности полагаться не только на описательные статистики, но и визуализацию данных.\nЭтот набор данных встроен в R (вызвать можно просто набрав anscombe в консоли).\n\nanscombe\n\n   x1 x2 x3 x4    y1   y2    y3    y4\n1  10 10 10  8  8.04 9.14  7.46  6.58\n2   8  8  8  8  6.95 8.14  6.77  5.76\n3  13 13 13  8  7.58 8.74 12.74  7.71\n4   9  9  9  8  8.81 8.77  7.11  8.84\n5  11 11 11  8  8.33 9.26  7.81  8.47\n6  14 14 14  8  9.96 8.10  8.84  7.04\n7   6  6  6  8  7.24 6.13  6.08  5.25\n8   4  4  4 19  4.26 3.10  5.39 12.50\n9  12 12 12  8 10.84 9.13  8.15  5.56\n10  7  7  7  8  4.82 7.26  6.42  7.91\n11  5  5  5  8  5.68 4.74  5.73  6.89\n\n\nДавайте попробуем посчитать описательные статистики самостоятельно.\n\n# посчитаем среднее\napply(anscombe, 2, mean)\n\n      x1       x2       x3       x4       y1       y2       y3       y4 \n9.000000 9.000000 9.000000 9.000000 7.500909 7.500909 7.500000 7.500909 \n\n# дисперсию\napply(anscombe, 2, var)\n\n       x1        x2        x3        x4        y1        y2        y3        y4 \n11.000000 11.000000 11.000000 11.000000  4.127269  4.127629  4.122620  4.123249 \n\n# коэффициент корреляции, привожу два варианта как посчитать, интересно, какой кажется проще\nmap2_dbl(anscombe %&gt;% select(x1:x4), anscombe %&gt;% select(y1:y4), ~cor(.x, .y))\n\n       x1        x2        x3        x4 \n0.8164205 0.8162365 0.8162867 0.8165214 \n\nmap2_dbl(anscombe[1:4], anscombe[5:8], ~cor(.x, .y))\n\n       x1        x2        x3        x4 \n0.8164205 0.8162365 0.8162867 0.8165214 \n\n# еще простой способ отразить большинство описательных статистик - просто вызвать функцию summary\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n\nМожно увидеть, что описательные статистики совпадают. Что насчет распределения данных?"
  },
  {
    "objectID": "posts/ansombe_quartet.html#построим-графики-распределения-значений",
    "href": "posts/ansombe_quartet.html#построим-графики-распределения-значений",
    "title": "Anscombe’s quartet",
    "section": "Построим графики распределения значений",
    "text": "Построим графики распределения значений\n\n\nShow the code\n# отрисовываем графики по очереди\np1 &lt;- ggplot(anscombe, aes(x1,y1))+\n  geom_point(size = 3.5, fill = 'darkorange', color= 'orangered', \n             alpha = 0.8, shape = 21)+\n  labs(\n       title = \"Dataset 1\" ) +\n  geom_smooth(se = FALSE, method = \"lm\", formula = \"y ~ x\", size = 0.8, alpha = 0.9)+\n  theme_bw()\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nShow the code\np2 &lt;- ggplot(anscombe, aes(x2,y2))+\n  geom_point(size = 3.5, fill = 'darkorange', color= 'orangered', \n             alpha = 0.8, shape = 21)+\n  labs(title = \"Dataset 2\" ) +\n  geom_smooth(se = FALSE, method = \"lm\", formula = \"y ~ x\", \n              size = 0.8, alpha = 0.9)+\n  theme_bw()\np3 &lt;- ggplot(anscombe, aes(x3,y3))+\n   geom_point(size = 3.5, fill = 'darkorange', color= 'orangered', \n             alpha = 0.8, shape = 21)+\n  labs(title = \"Dataset 3\" ) +\n  geom_smooth(se = FALSE, method = \"lm\", formula = \"y ~ x\", \n              size = 0.8, alpha = 0.9)+\n  theme_bw()\np4 &lt;- ggplot(anscombe, aes(x4,y4))+\n   geom_point(size = 3.5, fill = 'darkorange', color= 'orangered', \n             alpha = 0.8, shape = 21)+\n  labs(title = \"Dataset 4\" ) +\n  geom_smooth(se = FALSE, method = \"lm\", formula = \"y ~ x\", \n              size = 0.8, alpha = 0.9)+\n  theme_bw()\n# объединяем их в один плот с помощью библиотеки `patchwork`\n(p1 | p2) / (p3 | p4)\n\n\n\n\n\nИтак, как и ожидалось, распределения данных оказались совершенно разными. Подчеркну еще раз важность визуализации данных перед началом анализа. Не стоит опираться только на средние, медианы, дисперсию, поскольку эта информация должна дополняться визуальным представлением данных, даже хотя бы для себя.\nЕще вот такой пример обманчивых описательных статистик:\n\n\n\nобратите внимание на датазавтра наверху\n\n\n\nКроме того, рекомендую строить диаграммы рассеяния (scatter plot) как в коде, приведенном выше, а не опираться только на боксплоты (boxplot), к примеру. Боксплоты сокращают информацию о данных, хотя и являются стандартом на конференциях и в публикациях. Про это можно почитать здесь. Думаю, для публикации неплохим вариантом могут быть violin plots или боксплоты с полупрозрачными точками, отрисованные с помощью geom_jitter (примеры применения можно посмотреть в статье про пределы погрешностей). Правда, это лучше сработает, если точек не больше ~30, на мой взгляд, иначе график будет сильно рябить.\nО корректной, не вводящей в заблуждение читателя визуализации данных написано уже немало статей и книг, пока что приведу несколько ссылок для самостоятельного ознакомления:\n\nЛекция Дженни Брайан (Jenny Bryan) о предобработке данных перед построением графиков\nКнига по визуализации данных, доступна онлайн\nЕще одна книга по визуализации данных, доступна онлайн\nСтатья про самые распространенные ошибки при построении графиков\nСайт colorbrewer с хорошими сочетаниями цветов для отрисовки графиков"
  },
  {
    "objectID": "posts/ansombe_quartet.html#список-источников",
    "href": "posts/ansombe_quartet.html#список-источников",
    "title": "Anscombe’s quartet",
    "section": "Список источников",
    "text": "Список источников\n\nAnscombe, F. J. (1973). “Graphs in Statistical Analysis”. American Statistician. 27 (1): 17–21. doi:10.1080/00031305.1973.10478966\nhttps://en.wikipedia.org/wiki/Anscombe%27s_quartet\n\nПодписывайтесь на телеграм-канал, будет много интересного"
  },
  {
    "objectID": "posts/multiple_testing.html",
    "href": "posts/multiple_testing.html",
    "title": "Поправки на множественное тестирование",
    "section": "",
    "text": "Разберем, что такое поправки на множественное тестирование, зачем они нужны, как работают основные методы, которые часто используются в науке и индустрии, а также на что опираться при выборе поправки в своем исследовании.\nНачнем разбор с классификации."
  },
  {
    "objectID": "posts/multiple_testing.html#классификация-поправок-на-множественное-тестирование",
    "href": "posts/multiple_testing.html#классификация-поправок-на-множественное-тестирование",
    "title": "Поправки на множественное тестирование",
    "section": "Классификация поправок на множественное тестирование",
    "text": "Классификация поправок на множественное тестирование\nСуществует 2 принципиально разных подхода к поправкам на множественное тестирование.\n\nКонтроль групповой вероятности ошибки I рода (FWER, family-wise error rate)\n\nТесты, которые поправляют значимость у набора p-value (поправка Бонферрони, Холма, Шидака и тд.) вне зависимости, какой тест был применен до этого;\nТесты для попарных сравнений групп: пост-хоки (поправка Тьюки, поправка Даннета, тест Фишера LSD и тд).\n\nКонтроль доли ложных открытий (FDR, false discovery rate): поправка Benjamini-Hochberg, поправка Benjamini-Yekutieli.\n\nНебольшое напоминание про типы ошибок:\n\n\n\nhttps://t.me/stats_for_science/69\n\n\nРазберем разные виды поправок подробнее."
  },
  {
    "objectID": "posts/multiple_testing.html#симуляция-независимых-тестов-для-подсчета-fwer",
    "href": "posts/multiple_testing.html#симуляция-независимых-тестов-для-подсчета-fwer",
    "title": "Поправки на множественное тестирование",
    "section": "Симуляция независимых тестов для подсчета FWER",
    "text": "Симуляция независимых тестов для подсчета FWER\nГенерируем заданное количество раз (5, 10, 50, 100) выборки размером 100 элементов из одной генеральной совокупности (стандартного нормального распределения) и сравниваем их t-тестом. Повторяем это 10000 раз, чтобы оценить долю случаев, где мы получили p-value &lt; 0.05 (ложнопозитивный результат).\nТесты независимые, поскольку каждый раз извлекаем новую выборку, следовательно, мы ожидаем увидеть результат, близкий к рассчитанному по формуле выше.\n\n\nCode\npaste('Для 5 тестов: ', mean(replicate(10000, sum(replicate(5, t.test(rnorm(100), rnorm(100))$p.value) &lt; 0.05) != 0)))\n\n\n[1] \"Для 5 тестов:  0.2239\"\n\n\n\\(FWER = 1 - (1-\\alpha)^k = 1 - (1-0.05)^5 = 0.226\\)\n\n\nCode\npaste('Для 10 тестов: ', mean(replicate(10000, sum(replicate(10, t.test(rnorm(100), rnorm(100))$p.value) &lt; 0.05) != 0)))\n\n\n[1] \"Для 10 тестов:  0.3976\"\n\n\n\\(FWER = 1 - (1-\\alpha)^k = 1 - (1-0.05) ^{10} = 0.401\\)\n\n\nCode\npaste('Для 50 тестов: ', mean(replicate(10000, sum(replicate(50, t.test(rnorm(100), rnorm(100))$p.value) &lt; 0.05) != 0)))\n\n\n[1] \"Для 50 тестов:  0.9211\"\n\n\n\\(FWER = 1 - (1-\\alpha)^k = 1 - (1-0.05) ^{50} = 0.923\\)\n\n\nCode\npaste('Для 100 тестов: ', mean(replicate(10000, sum(replicate(100, t.test(rnorm(100), rnorm(100))$p.value) &lt; 0.05) != 0)))\n\n\n[1] \"Для 100 тестов:  0.9951\"\n\n\n\\(FWER = 1 - (1-\\alpha)^k = 1 - (1-0.05) ^{100} = 0.994\\)\nДействительно, при симуляции значения FWER сходятся с теоретически рассчитанными. Что можно сделать, чтобы избежать ошибок первого рода?"
  },
  {
    "objectID": "posts/multiple_testing.html#поправка-бонферрони-bonferroni",
    "href": "posts/multiple_testing.html#поправка-бонферрони-bonferroni",
    "title": "Поправки на множественное тестирование",
    "section": "Поправка Бонферрони (Bonferroni)",
    "text": "Поправка Бонферрони (Bonferroni)\nСамый простой способ контролировать вероятность ошибки первого рода – это изменить критический уровень значимости \\(\\alpha\\).\n\\[ FWER = 1 - (1-\\frac{\\alpha}{k})^k,  \\tag{2}\\]\nДелим \\(\\alpha\\) на число тестов -&gt; получаем новый p-уровень значимости, ниже которого результаты будут считаться статистически значимыми.\nИли умножаем каждое p-value на количество тестов, и если поправленное p-value &lt; 0.05, то результат считается статистически значимым.\nПри таком подходе мы контролируем вероятность совершить хоть одну ошибку первого рода на уровне 0.05, однако сильно завышаем вероятность ошибки второго рода (то есть не найти значимый эффект, где он на самом деле есть), следовательно, уменьшаем мощность теста.\nПроверим FWER после поправки.\n\n\nCode\npaste('Для 5 тестов FWER по Бонферрони: ', mean(replicate(10000, sum(replicate(5, t.test(rnorm(100), rnorm(100))$p.value) &lt; 0.05/5) != 0)))\n\n\n[1] \"Для 5 тестов FWER по Бонферрони:  0.051\"\n\n\n\n\nCode\npaste('Для 10 тестов FWER по Бонферрони: ', mean(replicate(10000, sum(replicate(10, t.test(rnorm(100), rnorm(100))$p.value) &lt; 0.05/10) != 0)))\n\n\n[1] \"Для 10 тестов FWER по Бонферрони:  0.0435\"\n\n\n\n\nCode\npaste('Для 50 тестов FWER по Бонферрони: ', mean(replicate(10000, sum(replicate(50, t.test(rnorm(100), rnorm(100))$p.value) &lt; 0.05/50) != 0)))\n\n\n[1] \"Для 50 тестов FWER по Бонферрони:  0.0479\"\n\n\n\n\nCode\npaste('Для 100 тестов FWER по Бонферрони: ', mean(replicate(10000, sum(replicate(100, t.test(rnorm(100), rnorm(100))$p.value) &lt; 0.05/100) != 0)))\n\n\n[1] \"Для 100 тестов FWER по Бонферрони:  0.0452\"\n\n\nДа, мы контролируем FWER на заданном уровне 0.05.\nПоправка Бонферрони используется редко, в основном в областях, где цена ошибок первого рода (ложнопозитивного результата) очень высока, например в исследованиях GWAS на человеке. В остальных случаях рекомендуют использовать менее консервативные поправки."
  },
  {
    "objectID": "posts/multiple_testing.html#поправка-холма-holm",
    "href": "posts/multiple_testing.html#поправка-холма-holm",
    "title": "Поправки на множественное тестирование",
    "section": "Поправка Холма (Holm)",
    "text": "Поправка Холма (Holm)\nМенее консервативная поправка. Метод часто называют “Бонферрони-Холма”, однако Карло Бонферрони не имел отношения к разработке этой формулы. Разберем на примере как работает.\n\np_value &lt;- c(0.004, 0.87, 0.003, 0.04, 0.18, 0.24)\n\nСортируем и ранжируем p-value по возрастанию, далее по формуле умножаем каждое p-value на \\((m+1-rank)\\), где \\(m\\) - количество тестов, \\(rank\\) - ранг p-value.\n\n\n\n\n\npvalue\nrank_pvalue\nformula\nresult\n\n\n\n\n0.003\n1\n0.003*(6 + 1 - 1)\n0.018\n\n\n0.004\n2\n0.004*(6 + 1 - 2)\n0.020\n\n\n0.040\n3\n0.04*(6 + 1 - 3)\n0.160\n\n\n0.180\n4\n0.18*(6 + 1 - 4)\n0.540\n\n\n0.240\n5\n0.24*(6 + 1 - 5)\n0.480\n\n\n0.870\n6\n0.87*(6 + 1 - 6)\n0.870\n\n\n\n\n\nДалее нужно задать, что поправленные p-value могут только возрастать, и при этом p-value заменяется на бОльшее, поэтому процедура поправки Холма называется пошаговой нисходящей – step-down.\n\n\n\n\n\npvalue\nrank_pvalue\nformula\nresult\np_adjusted\n\n\n\n\n0.003\n1\n0.003*(6 + 1 - 1)\n0.018\n0.018\n\n\n0.004\n2\n0.004*(6 + 1 - 2)\n0.020\n0.020\n\n\n0.040\n3\n0.04*(6 + 1 - 3)\n0.160\n0.160\n\n\n0.180\n4\n0.18*(6 + 1 - 4)\n0.540\n0.540\n\n\n0.240\n5\n0.24*(6 + 1 - 5)\n0.480\n0.540\n\n\n0.870\n6\n0.87*(6 + 1 - 6)\n0.870\n0.870\n\n\n\n\n\nМожем убедиться, что у нас подсчитано все верно:\n\np.adjust(sort(p_value), method = 'holm')\n\n[1] 0.018 0.020 0.160 0.540 0.540 0.870\n\n\nПоскольку для самого минимального p-value поправленное p-value такое же как и в Бонферрони, то поправка Холма контролирует FWER на том же уровне 0.05, что и поправка Бонферрони, при этом не так сильно снижает мощность тестов.\nПроверим на 100 тестах:\n\nreplicate(1000, sum(replicate(100, t.test(rnorm(100), rnorm(100))$p.value) %&gt;% \n  p.adjust(method = 'holm') &lt; 0.05) != 0) %&gt;%\n  mean()\n\n[1] 0.054\n\n\nТаким образом, мы все еще контролируем вероятность совершить хоть одну ошибку первого рода на уровне 0.05, и оставляем больше значимых результатов, по сравнению с поправкой Бонферрони. Поэтому во многих случаях рекомендуют использовать именно поправку Холма для множественных сравнений.\n\n\n\n\n\n\nСсылка на оригинальную статью:\n\n\n\nHolm, S. (1979). A simple sequentially rejective multiple test procedure. Scandinavian Journal of Statistics, 6, 65–70. https://www.jstor.org/stable/4615733.\n\n\nТеперь перейдем к поправкам, которые используются в конкретных тестах."
  },
  {
    "objectID": "posts/multiple_testing.html#тест-фишера-lsd-least-significant-difference",
    "href": "posts/multiple_testing.html#тест-фишера-lsd-least-significant-difference",
    "title": "Поправки на множественное тестирование",
    "section": "Тест Фишера LSD (Least significant difference)",
    "text": "Тест Фишера LSD (Least significant difference)\nИспользуется как постхок тест только после значимой ANOVA для сравнения средних групп между собой (напоминаю, что ANOVA, дисперсионный анализ дает ответ на вопрос, есть ли хоть какое-то различие между группами, но не говорит между какими). Также тест можно применять только для сравнения трех групп.\nФормула вычисления критерия:\n\\[\nt = \\frac{\\overline{X_1}-\\overline{X2}}{\\sqrt{MSE(\\frac{1}{n_1}+\\frac{1}{n_2})}}, где\n\\]\n\\(\\overline{X_1}\\), \\(\\overline{X_2}\\) – средние групп 1 и 2, \\(n_1\\), \\(n_2\\) – размер групп 1 и 2, \\(MSE\\) – mean square error из таблицы ANOVA, то есть общая дисперсия между всеми группами.\nДля трех групп имеет большую мощность чем Тьюки. Но если групп больше чем 3, то контролирует FWER на уровне больше 0.05 и следовательно к использованию не рекомендуется.\nПодробнее, почему это так, можно посмотреть здесь."
  },
  {
    "objectID": "posts/multiple_testing.html#поправка-тьюки-tukey-tukeyhsd",
    "href": "posts/multiple_testing.html#поправка-тьюки-tukey-tukeyhsd",
    "title": "Поправки на множественное тестирование",
    "section": "Поправка Тьюки (Tukey, TukeyHSD)",
    "text": "Поправка Тьюки (Tukey, TukeyHSD)\nИспользуется как постхок тест вне зависимости от значимости ANOVA (подробнее ниже) для сравнения средних групп между собой, чтобы узнать какие именно группы различаются. Также нет ограничения на количество групп, участвующих в сравнении.\nВ этом тесте сравнивается каждая группа с каждой, поэтому у него будет минимальная мощность, так как тестов больше всего. Если нам не нужно сравнивать каждую группу с каждой, то лучше использовать тест Даннета, который сравнивает одну группу с остальными и имеет более высокую мощность.\nФормула расчета тестовой статистики:\n\\[ q_s = \\frac{M_1 - M_2}{\\sqrt{\\frac{SS_w}{2}(\\frac{1}{n_A}+\\frac{1}{n_B})}},  \\]\nгде M1 &gt; M2 (средние в группе), nA, nB - размер 1 и 2 выборки, \\(SS_W\\) - внутригрупповая сумма квадратов в ANOVA.\nДля проверки гипотезы используется studentized range distribution, студентизированное распределение (не путать с t-распределением).\nУ теста Тьюки есть допущения к использованию:\n\nНезависимость наблюдений\nПримерное равенство дисперсий\nПримерно нормальное распределение данных в группах\n\nЕсли допущения про нормальность распределения и равенство дисперсий не выполняются, то можно использовать непараметрические аналоги теста.\n\n\n\n\n\n\nПро значимую ANOVA\n\n\n\nТест Тьюки вовсе необязательно использовать только после значимой ановы, как нередко пишут в учебниках, просто в тесте при расчете используется внутригрупповая сумма квадратов и количество степеней свободы из таблицы ANOVA. Поэтому в докомпьютерное время расчет критерия Тьюки был проще после дисперсионного анализа, и при незначимой анове сравнивать группы между собой уже не имело смысла. Сейчас в R в функции TukeyHSD() для расчета критерия Тьюки в качестве инпута используется результат ановы, но никто не запрещает применять тест и если анова оказалась незначимой.\nТакже может быть и ситуация, когда по результатам ANOVA получилось, что средние групп различаются между собой, но при этом по Тьюки нет, можно почитать здесь, почему так бывает."
  },
  {
    "objectID": "posts/multiple_testing.html#тест-данна-dunn",
    "href": "posts/multiple_testing.html#тест-данна-dunn",
    "title": "Поправки на множественное тестирование",
    "section": "Тест Данна (Dunn)",
    "text": "Тест Данна (Dunn)\nЯвляется непараметрическим постхок тестом, аналогом теста Тьюки, для ситуаций, когда его допущения не выполняются.\nПо сути сравнивает средний ранг групп, вычисленных после теста Краскелла-Уоллиса (Kruskal-Wallis), таким образом как бы учитывая общую дисперсию между группами (чего не будет происходить в попарных тестах Манна-Уитни). Далее полученные p-value должны быть поправлены любым методом, например Бонферрони, Холм, FDR.\nЛично мне это в свое время сломало мозг, что это поправка в поправке, вроде используем постхок тест, но при этом его результат тоже нужно поправить тестом на выбор (в функции dunn_test() из пакета rstatix поправка Холма происходит автоматически).\nКак альтернатива, в качестве непараметрического аналога Тьюки можно использовать попарные тесты Манна-Уитни с поправками, однако ранги будут рассчитаны отдельно для каждого теста.\nОригинальная статья про метод:\nDunn, O. J. (1964) Multiple comparisons using rank sums Technometrics, 6(3):241-252."
  },
  {
    "objectID": "posts/multiple_testing.html#тест-даннета-dunnet",
    "href": "posts/multiple_testing.html#тест-даннета-dunnet",
    "title": "Поправки на множественное тестирование",
    "section": "Тест Даннета (Dunnet)",
    "text": "Тест Даннета (Dunnet)\nС помощью этого теста сравнивают одну группу с остальными группами, например, когда задача сравнить контрольную группу и несколько воздействий, и не нужно сравнение каждой группы с каждой\nНапример, у нас 4 группы, из которой одна группа контрольная, с которой мы проводим сравнения. У нас будет всего 3 сравнения: control - A, control - B, control - C, что увеличивает мощность теста.\nДля теста Даннета должны соблюдаться такие же допущения, как и для теста Тьюки: независимость наблюдений, примерно равная дисперсия в группах и нормальное распределение.\nПосмотреть детально можно здесь.\nТеперь перейдем к принципиально другому подходу поправок – контроле доли ложных открытий (FDR)."
  },
  {
    "objectID": "posts/multiple_testing.html#определение-fdr",
    "href": "posts/multiple_testing.html#определение-fdr",
    "title": "Поправки на множественное тестирование",
    "section": "Определение FDR",
    "text": "Определение FDR\nFDR, false discovery rate – доля ложнопозитивных результатов.\nВ скрининговых экспериментах, таких как анализ RNA-seq данных важнее контролировать долю ложнопозитивных результатов (FDR), чем вероятность совершить хоть одно ложное открытие.\n\n\n\n\n\n\n\n\n\nH0 верна (различий нет)\nH0 неверна (различие есть)\n\n\n\n\nНе отклонить H0\nTrue Negative (TN)\nFalse Negative (FN)\n\n\nОтклонить H0\nFalse Positive (FP)\nTrue Positive (TP)\n\n\n\n\\[ FDR = \\frac{FP}{FP + TP} \\]\nПодробнее в этом видео."
  },
  {
    "objectID": "posts/multiple_testing.html#расчет-fdr",
    "href": "posts/multiple_testing.html#расчет-fdr",
    "title": "Поправки на множественное тестирование",
    "section": "Расчет FDR",
    "text": "Расчет FDR\nРасмотрим контроль FDR по методу Бенджамини-Хохберга (Benjamini-Hochberg), так как он используется чаще всего. Также FDR можно посчитать с помощью метода Benjamini-Yekutieli, но он имеет меньшую мощность и используется реже.\n\np_values &lt;- c(0.361, 0.387, 0.005, 0.009, 0.022, 0.051, 0.101, 0.019)\n\n\nСортируем и ранжируем p-value по возрастанию;\nКаждое p-value умножаем на \\(\\frac{m}{rank}\\), где \\(m\\) – количество тестов, \\(rank\\) – ранг p-value.\n\n\n\n\n\n\npvalue\nrank_pvalue\nformula\nresult\n\n\n\n\n0.005\n1\n0.005*(8/1)\n0.0400000\n\n\n0.009\n2\n0.009*(8/2)\n0.0360000\n\n\n0.019\n3\n0.019*(8/3)\n0.0506667\n\n\n0.022\n4\n0.022*(8/4)\n0.0440000\n\n\n0.051\n5\n0.051*(8/5)\n0.0816000\n\n\n0.101\n6\n0.101*(8/6)\n0.1346667\n\n\n0.361\n7\n0.361*(8/7)\n0.4125714\n\n\n0.387\n8\n0.387*(8/8)\n0.3870000\n\n\n\n\n\nИтоговое FDR вычисляется так, чтобы p-value не убывали, но при этом приводится в меньшую сторону (в отличие от поправки Холма), поэтому процедура называется пошаговой восходящей – step-up.\n\n\n\n\n\npvalue\nrank_pvalue\nformula\nresult\np_adjusted\nreject_H0\n\n\n\n\n0.005\n1\n0.005*(8/1)\n0.0400000\n0.0360000\nyes\n\n\n0.009\n2\n0.009*(8/2)\n0.0360000\n0.0360000\nyes\n\n\n0.019\n3\n0.019*(8/3)\n0.0506667\n0.0440000\nyes\n\n\n0.022\n4\n0.022*(8/4)\n0.0440000\n0.0440000\nyes\n\n\n0.051\n5\n0.051*(8/5)\n0.0816000\n0.0816000\nno\n\n\n0.101\n6\n0.101*(8/6)\n0.1346667\n0.1346667\nno\n\n\n0.361\n7\n0.361*(8/7)\n0.4125714\n0.3870000\nno\n\n\n0.387\n8\n0.387*(8/8)\n0.3870000\n0.3870000\nno\n\n\n\n\n\nFDR в основном используется в скрининговых экспериментах, где ключевые результаты могут быть проверены уже более прицельным экспериментом (например некоторые дифференциально экспрессирующиеся гены по результатам RNA-seq проверяют количественной ПЦР)."
  },
  {
    "objectID": "posts/R_question_how_to_ask.html",
    "href": "posts/R_question_how_to_ask.html",
    "title": "Как задать хороший вопрос в R чате?",
    "section": "",
    "text": "Для русскоязычного R-комьюнити есть два больших чата: R (язык программирования) и Горячая линия R. Здесь я бы хотела поделиться своим опытом задавания вопросов и создания воспроизводимых примеров (reprex, репрекс).\nReprex (reproducible example) – это минимальный пример кода, воспроизводящий ошибку или описывающий, что требуется сделать.\nТакой пример кода удобно копируется в чат с соответствующим форматированием, его легко читать и можно сразу же скопировать себе, чтобы попробовать помочь.\nДля создания репрексов рекомендуется использовать одноименный пакет reprex.\nУстановка: install.packages('reprex')\nДалее я обычно даже не загружаю пакет, а сразу пишу reprex::reprex(). Вариантов использования функции несколько, лично мне удобнее всего оказалось писать нужные строчки кода внутри фигурных скобок функции reprex::reprex({}).\nУ репрекса есть три важных свойства:\n\nкод должен работать (то есть все пакеты загружены и все переменные объявлены)\nкод легко запустить (никаких скриншотов и копирования из консоли со знаком &gt;)\nкод можно не запускать (в репрексе есть аутпут, и можно понять в чем ошибка, даже без запуска кода)\n\nНапример:\n\nreprex::reprex({\n    mtcars %&gt;% \n        filter(mpg &gt; 20) %&gt;% \n        group_by(cyl) %&gt;% \n        summarise(mpg)\n})\n\nПри попытке запустить такой код у меня сразу появилось, что нет функции %&gt;%, даже если пайп работал до этого. Репрекс создает совершенно новую сессию и поэтому необходимо загрузить все пакеты и объявить все переменные, даже если они уже были загружены и объявлены в скрипте. Соответственно, от своих реальных данных, на которых произошла ошибка, нужно взять минимальный воспроизводимый пример. Обычно я создаю игрушечные датасеты df &lt;- data.frame(a  = 1:10, b = letters[1:10]), на которых воссоздаю ошибку. Также можно использовать встроенные датасеты, например mtcars, iris.\nСозданный с помощью функции reprex::reprex() код можно сразу же копировать в телеграм-чат, оформление как код будет сразу же задано с помощью трех бэктиков ```. Однако в новых версиях телеграма появилась подсветка синтаксиса, если вставить код с указанием языка после трех бэктиков ```r, что максимально облегчает работу с кодом и повышает вероятность, что вам смогут помочь с запросом.\nВ случае если данные все же очень сложные, то можно воспользоваться функцией dput. Например, взять первые несколько строк head-ом и поместить в dput: dput(head(mtcars)), где вместо mtcars ваши данные. В результате будет сложная выдача structure(list...), которую можно скопировать и в репрексе создать такую переменную.\n\nreprex::reprex({\n    library(dplyr)\n    df &lt;- structure(list(mpg = c(21, 21, 22.8, 21.4, 18.7, 18.1), cyl = c(6, 6, 4, 6, 8, 6), \n    disp = c(160, 160, 108, 258, 360, 225), hp = c(110, 110, 93, 110, 175, 105), \n    drat = c(3.9, 3.9, 3.85, 3.08, 3.15, 2.76), wt = c(2.62, 2.875, 2.32, 3.215, 3.44, 3.46),\n    qsec = c(16.46, 17.02, 18.61, 19.44, 17.02, 20.22), vs = c(0, 0, 1, 1, 0, 1), \n    am = c(1, 1, 1, 0, 0, 0), gear = c(4, 4, 4, 3, 3, 3), \n    carb = c(4,4, 1, 1, 2, 1)), \n    row.names = c(\"Mazda RX4\", \"Mazda RX4 Wag\", \"Datsun 710\", \"Hornet 4 Drive\", \"Hornet Sportabout\", \"Valiant\"), class = \"data.frame\")\n    df %&gt;% filter(mpg &gt; 20)\n}) \n\nПри таком подходе рекомендуется постараться минимизировать пример, максимально изолировать ошибку, чтобы было удобнее читать и помогать.\nЕсли вопрос не об ошибке, а о том, что нужно сделать, то желательно показать ход мысли, как пытались решить самостоятельно, и можно создать образец данных, которые нужно получить. Вот пара примеров (здесь и здесь) моих вопросов в чате R.\nВообще создание репрекса может занять много времени, но это является крайне полезным. Несколько раз я начинала писать вопрос, создавала репрекс и на этапе создания понимала, в чем ошибка, в итоге репрекс помог сам по себе, даже без обращения к участникам чатов. Один раз успела отправить сообщение и при перечитывании поняла, что было не так, но мне уже успели ответить, не стала удалять.\nОтветы на часто (один раз) задаваемые вопросы:\nВопрос 1: почему бы просто не скинуть таблицу и образец своего скрипта, тогда можно будет сразу на реальных данных показать все?\nОтвет: мне кажется неудобным сохранять данные, сохранять скрипт себе, загружать таблицу заново, когда можно было бы просто скопировать из чата, не забивая себе файловую систему.\nВопрос 2: почему бы не использовать .RData?\nОтвет: в целом, рдату использовать чуть лучше, но все же минусы про файловую систему остаются актуальными. Плюс идея репрекса в минимизации и изолировании примера, чтобы оставались только проблемные строки и столбцы, для фокусировки внимания.\nЕще парочка ссылок: инструкция от Хэдли, пример создания репрекса на shiny, слайды и 50-минутное видео о репрексах от Дженни Брайан (презентация очень крутая, наиболее информативная, советую посмотреть).\nВ общем, рекомендую использовать этот подход, тогда освоение R будет более приятным и успешным. На стаковерфлоу результат репрекса тоже можно забрасывать, я думаю, но возможно туда еще нужно указать результаты sessionInfo() (поправьте в комментариях, если не так). Сама новые вопросы на стаковерфлоу не писала, хватает обычно уже существующих для моих задач.\nПодписывайтесь на телеграм-канал: https://t.me/stats_for_science, будет много интересного."
  },
  {
    "objectID": "posts/types_of_error_bars.html",
    "href": "posts/types_of_error_bars.html",
    "title": "Виды пределов погрешностей",
    "section": "",
    "text": "Сегодня поговорим о различных видах пределов погрешностей или усов, как пишут в русскоязычной литературе (error bars).\nПредупреждаю сразу: по ходу повествования я буду использовать все варианты написания этого термина, даже слово эррор бар.\nВажно отметить, что существует два принципиально разных вида отображения пределов погрешностей на графике:\nОни выглядят на графике одинаково, но по факту фундаментально различны. Давайте разбираться, в чем разница."
  },
  {
    "objectID": "posts/types_of_error_bars.html#descriptive-error-bars-описательные-пределы-погрешностей",
    "href": "posts/types_of_error_bars.html#descriptive-error-bars-описательные-пределы-погрешностей",
    "title": "Виды пределов погрешностей",
    "section": "Descriptive error bars (Описательные пределы погрешностей)",
    "text": "Descriptive error bars (Описательные пределы погрешностей)\nК описательным эррор барам относятся:\n\nРазмах (range): разница между максимальным и минимальным значением в выборке (Xmax - Xmin).\nМежквартильный размах (interquartile range, IQR): разница между третьм квартилем (Q3) и первым квартилем (Q1.).\nСтандартное отклонение (standard deviation, sd): квадратный корень из дисперсии.\n\nРазмах самая простая для понимания метрика, при этом редко использующаяся, поскольку сама по себе разница между максимальным и минимальным значением довольно-таки малоинформативна.\nМежквартильный размах (IQR), точнее 1.5*IQR чаще всего используется на боксплотах (boxplot), я редко встречала 1*IQR или 1.5*IQR как усы к обычным барплотам.\nБарплот (barplot) - столбчатая диаграмма для категориальных данных, их будет много чуть дальше.\n\n\n\nСамое простое описание составляющих боксплота\n\n\nЕсли расставить числа в ряд по возрастанию, то середина этого ряда - медиана (median) или второй квартиль (Q2). Первый квартиль (Q1) - значение, меньше которого 25% процентов данных, третий квартиль (Q3) - значение, меньше которого 75% данных.\nДумаю, что на рисунке понять проще:\n\n\n\nпро межквартильный размах (IQR)\n\n\nМежквартильный размах намного чаще используется для визуализации, так как предоставляет больше информации о данных.\nСтандартное отклонение (standard deviation) по-моему наиболее часто встречается в публикациях и на конференциях (по крайней мере в биологии), да и я обычно использую именно sd в качестве предела погрешностей.\nФормула стандартного отклонения (для генеральной совокупности): \\[\\Large sd = \\sqrt{var} = \\sqrt{\\frac{\\sum_{i=1}^{N}(x_{i} - \\mu)^2}{N}}\\]Где \\(\\mu\\) - среднее значение в генеральной совокупности, \\(N\\) - размер генеральной совокупности, var (variance) - дисперсия. Но мы обычно работаем с выборками, а не генеральной совокупностью, и в формуле вычисления sd в Excel и R используют несмещенную (unbiased) оценку дисперсии и стандартного отклонения (потому что для выборки): \\[\\Large sd = \\sqrt{var} = \\sqrt{\\frac{\\sum_{i=1}^{N}(x_{i} - \\overline{x})^2}{N-1}}\\]\nПочему именно \\(N-1\\) в знаменателе выходит за рамки нашего обсуждения, поэтому ограничусь ссылками: 1, 2, видео с таймкодом.\nЕще не сделала схему с детальным вычислением стандартного отклонения на реальных данных, поэтому пока можно посмотреть на статквесте.\nВажный момент! Все вышеописанные метрики отражают разброс значений в нашей выборке, без каких-либо предположений о происходящем в генеральной совокупности. В этом отличие от второго типа error bar."
  },
  {
    "objectID": "posts/types_of_error_bars.html#inferential-error-bars",
    "href": "posts/types_of_error_bars.html#inferential-error-bars",
    "title": "Виды пределов погрешностей",
    "section": "Inferential error bars",
    "text": "Inferential error bars\nК эррор барам, отражающим статистики вывода относятся:\n\nСтандартная ошибка среднего (standard error of mean, SEM или просто SE);\nДоверительный интервал (confidence interval, CI).\n\nПринципиальное отличие от описательных пределов погрешности в том, что грубо говоря, стандартная ошибка среднего/доверительный интервал пытаются отразить степень уверенности в поиске к примеру истинного среднего генеральной совокупности. В то время как описательные отражают, что происходит конкретно в нашей выборке.\nТут немного инфы для продвинутых (не открывайте, если не уверены, что хотите это знать!):\nНебольшое уточнение: с помощью бутстрепов можно оценивать не только доверительный интервал и стандартную ошибку для среднего, но и для медианы и даже для стандартного отклонения, но про это сейчас не будем\n\nСтандартная ошибка среднего\nТеперь еще немного вымученных формулировок, которые попробую сформулировать понятнее.\nВымученная формулировка: The standard error (SE) of a statistic is the standard deviation of its sampling distribution or an estimate of that standard deviation. (цитата прямо из википедии)\nФормула вычисления стандартной ошибки среднего очень простая - стандартное отклонение, деленное на квадратный корень из размера выборки. Но что на самом деле это значит, какой физический смысл стоит за результатом этого вычисления? Попробуйте сами ответить на этот вопрос, опираясь только на определение из википедии и формулу)\nТеперь попробуем представить, что мы провели некий эксперимент, например измеряли вес 20 мышей после какого-либо воздействия и усредняли полученные значения. При этом мы решили 10 раз повторить свой эксперимент, в результате чего получили 10 средних значений. После этого мы можем посчитать среднее средних (!) и стандартное отклонение средних. Вот это стандартное отклонение выборочных средних и есть стандартная ошибка среднего. Ура? Пойду воспроизводить эксперимент по 10 раз?\nНо мы не всегда (обычно никогда) можем себе позволить повторять эксперимент по 10 раз, и хитрость в том, что мы можем вычислить стандартную ошибку среднего без многократного повторения эксперимента, просто поделив стандартное отклонение на квадратный корень из размера выборки.\nВот тут хорошо расписано, как моделировать стандартную ошибку средних и что она действительно соответствует стандартному отклонению, деленному на квадратный корень из числа наблюдений.\n\\[\\huge SE = \\frac{sd}{\\sqrt{N}}\\] Формула SE (стандартной ошибки), где sd - это стандартное отклонение, N - количество наблюдений\nВот еще можно посмотреть про:\n\nотличия стандартного отклонения от стандартной ошибки https://www.youtube.com/watch?v=SzZ6GpcfoQY\nобъяснение стандартной ошибки с бутстреп-примером https://www.youtube.com/watch?v=XNgt7F6FqDU&t=341s\n\nВ статье, на которую я опиралась при написании этого материала, было указано, что для представления сравнения групп лучше использовать стандартную ошибку/доверительный интервал как error bar, а не стандартное отклонение и другие описательные статистики.\nНо у меня есть неприятное подозрение, что для публикаций и представлений своей работы на конференциях некоторые недобросовестные ученые используют se, чтобы на графиках были усы поменьше. Однако, я не хочу обидеть тех, кто использует стандартную ошибку и понимает физический смысл. Интересно будет собрать примеры работ, где использование se оправданно и разумно, и где это не так, поэтому если есть примеры, то пишите в комментарии.\nВ целом, плюс именно se в том, что при отрисовке сравнений двух или нескольких групп, перекрываемость усов позволяет судить об отсутствии статистической значимости различий (при этом наоборот не работает, про это будет еще чуть дальше), в то время как sd и остальные описательные пределы погрешностей - нет. Однако sd показывает данные почти как они есть, то есть реальный разброс в наших данных, без предположений о генеральной совокупности, поэтому лично я предпочитаю sd для отрисовки. Это тоже интересная тема для дискуссии, буду рада обсудить в комментариях.\nИ наконец…\n\n\nДоверительный интервал\nЕсли простыми словами, то доверительный интервал оценивает диапазон, в котором с заданной уверенностью (например 95%), можно ожидать истинное значение параметра, например среднего генеральной совокупности.\nПрикрепляю формулу (кстати все формулы записаны прямо силами Rmarkdown):\n\\[\\huge CI = \\overline{x} ± z\\frac{s}{\\sqrt{n}}\\]\nФормула доверительного интервала (CI), \\(\\overline{x}\\) - среднее значение выборки, z - значение уровня достоверности, например для 95% уровня достоверности, \\(z = 1.96\\), \\(\\frac{s}{\\sqrt{n}}\\) - формула уже знакомой стандартной ошибки.\nВообще я не люблю эту тему, но к счастью уже существует немало источников, которые объяснили доверительный интервал разными способами:\n\nВ книге у Ивана объяснение доверительных интервалов классическим образом через формулу стандартной ошибки;\nКлассное объяснение доверительных интервалов с помощью бутстрепа на статквесте (канал супер, всем рекомендую);\nБонусом для тех, кому это все слишком просто: я нашла совершенно дикую статью про доверительные интервалы, доверительные полосы и доверительные эллипсы (sic!), поэтому кто желает преисполниться - велком (вот ссылка). Краткого пересказа не будет, это надо прочитать самостоятельно.\n\nНебольшой вывод. Отрисовка доверительных интервалов сейчас считается модной, якобы их проще интерпретировать. Но на самом деле доверительный интервал как и p-value - это один из тех концептов, которые провоцируют просто огромное количество мисинтерпретаций, это кстати одна из причин, по которой я это не люблю рассказывать. Важно сейчас отметить вот что:\n\n\n\nИнтерпретация перекрывания inferential error bars. Ссылка на статью, откуда картинка\n\n\nТаким образом, перекрывание стандартных ошибок говорит об отсутствии значимости в различии, при этом обратное не верно, а с доверительными интервалами наоборот - отсутствие перекрывания доверительных интервалов говорит о значимости различий, в то время обратное не верно.\nВ этом смысле мне нравится концепция стандартного отклонения, потому что их перекрывание или не перекрывание не говорит нам вообще ничего, а значит - нельзя запутаться!). Чуть дальше разберем, как выглядят разные пределы погрешностей!\nВ любом случае, вне зависимости какой тип пределов погрешностей вы выбрали для отображения на графике, всегда нужно подписывать какой, потому что интерпретации совершенно разные."
  },
  {
    "objectID": "posts/types_of_error_bars.html#а-что-если-вообще-не-рисовать-пределы-погрешностей",
    "href": "posts/types_of_error_bars.html#а-что-если-вообще-не-рисовать-пределы-погрешностей",
    "title": "Виды пределов погрешностей",
    "section": "А что если вообще не рисовать пределы погрешностей?",
    "text": "А что если вообще не рисовать пределы погрешностей?\nЕсли число значений в выборке невелико (например меньше 10), то лучше нарисовать все числа как они есть, например с помощью диаграммы рассеяния (scatter plot) без редуцирования информации в боксплоты или барплоты с пределами погрешностей. Если значений больше, то возможно множество вариантов отрисовывания, часто исследователи используют просто барплоты с пределами погрешностей или боксплоты, однако здесь я предлагаю два возможных варианта более репрезентативного отображения данных.\nПервый - это отрисовать violin plot (скрипичная диаграмма), но не просто, а с небольшим боксплотом внутри. Я эту идею подчерпнула на курсе бластима по R, мне показалось очень забавно, прикрепляю небольшой пример как это выглядит на примере данных iris.\n\nlibrary(tidyverse)\nviolin_box &lt;- iris %&gt;% \n  ggplot(aes(x = Species, y = Sepal.Width))+\n  geom_violin(aes(fill = Species))+\n  geom_boxplot(width = 0.15, alpha = 0.8)+\n  theme_bw()\nviolin_box\n\n\n\n\nВторой вариант больше подойдет для относительно небольшого количества наблюдений, когда счет идет на десятки, но не тысячи точек. Это комбинация боксплота и отображения точек как они есть с помощью geom_jitter() в пакете ggplot2.\n\nbox_point &lt;- iris %&gt;% \n  ggplot(aes(Species, Sepal.Width))+\n  geom_boxplot()+\n  geom_jitter(aes(colour = Species), \n              position = position_jitter(width = 0.3, height = 0),\n              alpha = 0.6, size = 1.5)+\n  theme_bw()\nbox_point\n\n\n\n\nПо моему прикольно получилось! Эти варианты визуализации содержат гораздо больше информации, сравните например с обычными боксплотами и барплотами (здесь как предел погрешности использовала стандартное отклонение).\n\n📝 UPD: в комментариях посоветовали напомнить, что перекрывание или не-перекрывание усов в боксплотах и вайлин плотах не имеет отношения к статистике вывода, то есть не позволяет делать выводы о значимости различий\n\n\nbox &lt;- iris %&gt;% \n  ggplot(aes(Species, Sepal.Width, fill = Species))+\n  geom_boxplot()+\n  theme_bw()\nbar &lt;- iris %&gt;% \n  group_by(Species) %&gt;% \n  summarise(mean_PW = mean(Sepal.Width), sd_PW = sd(Sepal.Width)) %&gt;% \n  ggplot(aes(Species, mean_PW, fill = Species))+\n  geom_bar(stat = 'identity')+\n  geom_errorbar(aes(ymin = mean_PW - sd_PW, ymax = mean_PW + sd_PW), width = 0.2)+\n  labs(y = 'Mean Sepal Width')+\n  ggtitle('Error bars are standard deviation')+\n  theme_bw()\nbox\n\n\n\nbar\n\n\n\n\nА теперь все вместе на одном графике (обратите внимание на пакет patchwork для красивого объединения плотов на одном рисунке):\n\nlibrary(patchwork)\np &lt;- (violin_box + box_point) / (box + bar)\np + plot_annotation(tag_levels = 'A')\n\n\n\n\nГолосуйте, какой плот больше нравится и является более информативным. Мне лично здесь нравится вариант B - box+точки, кажется наиболее информативным и красивым. Возможно, если наблюдений будет больше, то лучше окажется первый вариант с вайлином плотом и боксом.\n\n📝 В violin plot-е (скрипичная диаграмма) форма отражает плотность распределения значений. Грубо говоря, чем больше значений в диапазоне, тем толще соответствующий диапазон на графике. В случае geom_jitter по оси X важна только принадлежность точек к группе, внутри одной группы точки по оси X распределяются так, чтобы не перекрывать друг друга.\n\nА теперь визуализация трех основных пределов погрешностей: стандартного отклонения, стандартной ошибки и доверительных интервалов на данных iris.\n\nlibrary(data.table)\nbar_se &lt;- iris %&gt;% \n  group_by(Species) %&gt;% \n  summarise(mean_PW = mean(Sepal.Width), se_PW = sd(Sepal.Width)/sqrt(length(Sepal.Width))) %&gt;% \n  ggplot(aes(Species, mean_PW, fill = Species))+\n  geom_bar(stat = 'identity')+\n  geom_errorbar(aes(ymin = mean_PW - se_PW, ymax = mean_PW + se_PW), width = 0.2)+\n  labs(y = 'Mean Sepal Width')+\n  ggtitle('Error bars are standard error')+\n  theme_bw()\n# bar_se\n\nbar_CI &lt;- iris %&gt;% \n  group_by(Species) %&gt;%\n  summarise(n=n(), mean=mean(Sepal.Length), sd=sd(Sepal.Length)) %&gt;%\n  mutate(se = sd/sqrt(n))  %&gt;%\n  mutate(ic = se * qt((1-0.05)/2 + .5, n-1)) %&gt;% \n  ggplot(aes(Species, mean, fill = Species))+\n  geom_bar(stat = 'identity')+\n  geom_errorbar(aes(ymin = mean - ic, ymax = mean + ic), width = 0.2)+\n  labs(y = 'Mean Sepal Width')+\n  ggtitle('Error bars are confidence intervals')+\n  theme_bw()\n# bar_CI\nbar + bar_se + bar_CI+  plot_layout(ncol = 2)\n\n\n\n\nТеперь я сделаю одну плохую вещь, а именно просто сравню тестом Стьюдента Sepal.Width для разных видов ириса. Как думаете, почему это плохо?\nЯ в этом примере не делаю поправку на множественное тестирование\n\niris %&gt;% \n  setDT() \ncat('versicolor vs setosa: \\np-value of the test', t.test(iris[Species == 'setosa', Sepal.Width], iris[Species == 'versicolor', Sepal.Width])$p.value)\n\nversicolor vs setosa: \np-value of the test 2.484228e-15\n\ncat('setosa vs virginica: \\np-value of the test', t.test(iris[Species == 'setosa', Sepal.Width], iris[Species == 'virginica', Sepal.Width])$p.value)\n\nsetosa vs virginica: \np-value of the test 4.570771e-09\n\ncat('virginica vs versicolor: \\np-value of the test', t.test(iris[Species == 'virginica', Sepal.Width], iris[Species == 'versicolor', Sepal.Width])$p.value)\n\nvirginica vs versicolor: \np-value of the test 0.001819483\n\n\nНо один раз в жизни можно, только для демонстрации того, что все выборки значимо отличаются друг от друга (без поправки), и на графиках можно увидеть что доверительные интервалы не перекрываются.\nУра! Я дописала, а вы дочитали, с чем я всех и поздравляю) Теперь перейдем к выводам."
  },
  {
    "objectID": "posts/types_of_error_bars.html#выводы",
    "href": "posts/types_of_error_bars.html#выводы",
    "title": "Виды пределов погрешностей",
    "section": "Выводы",
    "text": "Выводы\n\nСуществует два типа отображения пределов погрешностей на графике: описательные, которые описывают значения в конкретно нашей выборке и inferential (так и не придумала как переводить), которые пытаются отразить что-то о генеральной совокупности с заданной долей уверенности.\nДля отображения сравнений между группами рекомендуют использовать вторые, поскольку они позволяют делать выводы из перекрывания или не-перекрывания усов.\nОднако, есть способы рисовать распределение наших значений без использования мисинтерпретируемых пределов погрешностей, например violin+boxplot и boxplot+точки\n\nПодписывайтесь на телеграм канал: https://t.me/stats_for_science, будет много интересного. Обсудить пост можно здесь в комментариях."
  },
  {
    "objectID": "posts/YandexMetricsQuarto.html",
    "href": "posts/YandexMetricsQuarto.html",
    "title": "Как добавить яндекс-метрику на сайт Quarto",
    "section": "",
    "text": "Всем привет!\nВ какой-то момент мне стало интересно, как работает яндекс-метрика для веб-аналитики, и я решила попробовать это сделать на своем сайте со статьями по R.\nПошаговая инструкция:\n\nДля начала нужно создать счетчик на сайте метрики, вписать туда URL сайта, принять условия соглашения и тп.\nПоявится уникальный номер счетчика и код счетчика в JavaScript, который нужно добавить на сайт в пределах тегов &lt;head&gt;&lt;/head&gt; или &lt;body&gt;&lt;/body&gt;. Как это сделать в Quarto-сайте не было написано, но все оказалось очень просто и изящно.\nНужно сохранить вышеприведенный код счетчика в файл .js в директории проекта сайта например с названием metrics.js.\nВ файле _quarto.yml, где хранятся основные настройки сайта вписать:\nformat:\n  html:\n    include-before-body: &lt;path_to_file/metrics.js&gt;\nПроверить, что счетчик установлен на странице метрики, если все сделано правильно, то по ссылке появится всплывающее окно о том, что счетчик активен.\nАнализировать аналитику сайта.\n\n\n\n\n\n\n\nGoogle-analytics\n\n\n\nGoogle-аналитику можно было прикрепить на сайт относительно нативным образом, встроенным в Quarto."
  }
]